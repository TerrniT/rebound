basePath: /api
definitions:
  entity.ActivityLevel:
    enum:
    - sedentary
    - lightly_active
    - moderately_active
    - very_active
    - extra_active
    type: string
    x-enum-varnames:
    - ActivityLevelSedentary
    - ActivityLevelLightlyActive
    - ActivityLevelModeratelyActive
    - ActivityLevelVeryActive
    - ActivityLevelExtraActive
  entity.FoodItem:
    properties:
      barcode_upc:
        type: string
      brand_name:
        type: string
      calcium_mg_per_default_serving:
        type: number
      calories_per_default_serving:
        type: number
      carbs_grams_per_default_serving:
        type: number
      cholesterol_mg_per_default_serving:
        type: number
      created_at:
        type: string
      created_by_user_id:
        type: string
      fat_grams_per_default_serving:
        type: number
      fiber_grams_per_default_serving:
        type: number
      id:
        type: string
      iron_mg_per_default_serving:
        type: number
      is_verified:
        type: boolean
      name:
        type: string
      potassium_mg_per_default_serving:
        type: number
      protein_grams_per_default_serving:
        type: number
      saturated_fat_grams_per_default_serving:
        type: number
      serving_size_default_qty:
        type: number
      serving_size_default_unit:
        type: string
      sodium_mg_per_default_serving:
        type: number
      source:
        $ref: '#/definitions/entity.FoodItemSource'
      sugar_grams_per_default_serving:
        type: number
      trans_fat_grams_per_default_serving:
        type: number
      updated_at:
        type: string
      vitamin_a_mcg_per_default_serving:
        type: number
      vitamin_c_mg_per_default_serving:
        type: number
    type: object
  entity.FoodItemSource:
    enum:
    - user_created
    - system
    - api
    type: string
    x-enum-varnames:
    - FoodItemSourceUserCreated
    - FoodItemSourceSystem
    - FoodItemSourceAPI
  entity.MealFoodItem:
    properties:
      calories_consumed:
        type: number
      carbs_consumed:
        type: number
      fat_consumed:
        type: number
      food_item_id:
        type: string
      id:
        type: string
      logged_at:
        type: string
      meal_id:
        type: string
      protein_consumed:
        type: number
      quantity_consumed:
        type: number
      serving_unit_consumed:
        type: string
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        $ref: '#/definitions/entity.UserGender'
      id:
        type: string
      is_active:
        type: boolean
      is_email_verified:
        type: boolean
      last_login_at:
        type: string
      last_name:
        type: string
      profile_picture_url:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  entity.UserBiometric:
    properties:
      activity_level:
        $ref: '#/definitions/entity.ActivityLevel'
      body_fat_percentage:
        type: number
      chest_circumference_cm:
        type: number
      created_at:
        type: string
      height_cm:
        type: number
      hip_circumference_cm:
        type: number
      id:
        type: string
      log_date:
        type: string
      resting_heart_rate_bpm:
        type: integer
      user_id:
        type: string
      waist_circumference_cm:
        type: number
      weight_kg:
        type: number
    type: object
  entity.UserGender:
    enum:
    - Male
    - Female
    type: string
    x-enum-varnames:
    - UserGenderMale
    - UserGenderFemale
  entity.UserMeal:
    properties:
      created_at:
        type: string
      custom_meal_name:
        type: string
      id:
        type: string
      meal_date:
        type: string
      meal_time:
        type: string
      meal_type:
        $ref: '#/definitions/entity.UserMealType'
      notes:
        type: string
      total_calories_consumed:
        type: number
      total_carbs_consumed:
        type: number
      total_fat_consumed:
        type: number
      total_protein_consumed:
        type: number
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  entity.UserMealType:
    enum:
    - breakfast
    - lunch
    - dinner
    - snack
    - other
    type: string
    x-enum-varnames:
    - UserMealTypeBreakfast
    - UserMealTypeLunch
    - UserMealTypeDinner
    - UserMealTypeSnack
    - UserMealTypeOther
  entity.UserNutritionGoal:
    properties:
      created_at:
        type: string
      goal_effective_date:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      notes:
        type: string
      target_calories:
        type: number
      target_carbs_grams:
        type: number
      target_fat_grams:
        type: number
      target_fiber_grams:
        type: number
      target_protein_grams:
        type: number
      target_sugar_grams_limit:
        type: number
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  entity.UserWorkoutSession:
    properties:
      completed_at:
        type: string
      created_at:
        type: string
      duration_minutes:
        type: integer
      id:
        type: string
      location:
        type: string
      mood_rating:
        type: integer
      notes:
        type: string
      perceived_exertion_rating:
        type: integer
      plan_id:
        type: string
      scheduled_at:
        type: string
      session_name:
        type: string
      started_at:
        type: string
      status:
        $ref: '#/definitions/entity.WorkoutSessionStatus'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  entity.WorkoutSessionStatus:
    enum:
    - scheduled
    - in_progress
    - completed
    - cancelled
    type: string
    x-enum-varnames:
    - WorkoutSessionStatusScheduled
    - WorkoutSessionStatusInProgress
    - WorkoutSessionStatusCompleted
    - WorkoutSessionStatusCancelled
  v1.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  v1.PaginatedResponse:
    properties:
      data: {}
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Fitness application API for tracking nutrition, meals, and products
  title: Rebound API
  version: "1.0"
paths:
  /api/users:
    get:
      description: Get a paginated list of users
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 10)'
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /api/users/{id}:
    delete:
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Delete a user
      tags:
      - users
    get:
      description: Get a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update a user
      tags:
      - users
  /api/users/{id}/password:
    put:
      consumes:
      - application/json
      description: Update a user's password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: New password
        in: body
        name: password
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update user password
      tags:
      - users
  /api/users/{id}/verify-email:
    put:
      consumes:
      - application/json
      description: Update a user's email verification status
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Verification status
        in: body
        name: verified
        required: true
        schema:
          additionalProperties:
            type: boolean
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update email verification status
      tags:
      - users
  /food-items:
    get:
      description: Get a paginated list of food items
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.FoodItem'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: List food items
      tags:
      - food-items
    post:
      consumes:
      - application/json
      description: Create a new food item with the provided details
      parameters:
      - description: Food item details
        in: body
        name: foodItem
        required: true
        schema:
          $ref: '#/definitions/entity.FoodItem'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.FoodItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Create a new food item
      tags:
      - food-items
  /food-items/{id}:
    delete:
      description: Delete a food item by its ID
      parameters:
      - description: Food item ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Delete a food item
      tags:
      - food-items
    get:
      description: Get a food item by its ID
      parameters:
      - description: Food item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FoodItem'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get a food item by ID
      tags:
      - food-items
    put:
      consumes:
      - application/json
      description: Update an existing food item
      parameters:
      - description: Food item ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated food item details
        in: body
        name: foodItem
        required: true
        schema:
          $ref: '#/definitions/entity.FoodItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.FoodItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update a food item
      tags:
      - food-items
  /food-items/search:
    get:
      description: Search food items by name or brand
      parameters:
      - description: Search query
        in: query
        name: query
        required: true
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/v1.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.FoodItem'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Search food items
      tags:
      - food-items
  /meals:
    post:
      consumes:
      - application/json
      description: Create a new meal for a user
      parameters:
      - description: Meal object
        in: body
        name: meal
        required: true
        schema:
          $ref: '#/definitions/entity.UserMeal'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.UserMeal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Create a new meal
      tags:
      - meals
  /meals/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a meal by its ID
      parameters:
      - description: Meal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Delete a meal
      tags:
      - meals
    get:
      consumes:
      - application/json
      description: Get a meal by its ID
      parameters:
      - description: Meal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserMeal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get a meal by ID
      tags:
      - meals
    put:
      consumes:
      - application/json
      description: Update an existing meal
      parameters:
      - description: Meal ID
        in: path
        name: id
        required: true
        type: string
      - description: Meal object
        in: body
        name: meal
        required: true
        schema:
          $ref: '#/definitions/entity.UserMeal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserMeal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update a meal
      tags:
      - meals
  /meals/{id}/food-items:
    get:
      consumes:
      - application/json
      description: Get all food items for a meal
      parameters:
      - description: Meal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.MealFoodItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get meal food items
      tags:
      - meals
    post:
      consumes:
      - application/json
      description: Add a new food item to a meal
      parameters:
      - description: Meal ID
        in: path
        name: id
        required: true
        type: string
      - description: Food item object
        in: body
        name: foodItem
        required: true
        schema:
          $ref: '#/definitions/entity.MealFoodItem'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.MealFoodItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Add food item to meal
      tags:
      - meals
  /meals/food-items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a food item from a meal
      parameters:
      - description: Food item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Delete meal food item
      tags:
      - meals
    put:
      consumes:
      - application/json
      description: Update an existing food item in a meal
      parameters:
      - description: Food item ID
        in: path
        name: id
        required: true
        type: string
      - description: Food item object
        in: body
        name: foodItem
        required: true
        schema:
          $ref: '#/definitions/entity.MealFoodItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.MealFoodItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update meal food item
      tags:
      - meals
  /meals/user/{userID}:
    get:
      consumes:
      - application/json
      description: Get all meals for a specific user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.UserMeal'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get user meals
      tags:
      - meals
  /nutrition/biometrics:
    post:
      consumes:
      - application/json
      description: Create new biometrics for a user
      parameters:
      - description: Biometrics object
        in: body
        name: biometrics
        required: true
        schema:
          $ref: '#/definitions/entity.UserBiometric'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.UserBiometric'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Create biometrics
      tags:
      - nutrition
  /nutrition/biometrics/{id}:
    delete:
      consumes:
      - application/json
      description: Delete biometrics by ID
      parameters:
      - description: Biometrics ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Delete biometrics
      tags:
      - nutrition
    get:
      consumes:
      - application/json
      description: Get biometrics by ID
      parameters:
      - description: Biometrics ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserBiometric'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get biometrics
      tags:
      - nutrition
    put:
      consumes:
      - application/json
      description: Update existing biometrics
      parameters:
      - description: Biometrics ID
        in: path
        name: id
        required: true
        type: string
      - description: Biometrics object
        in: body
        name: biometrics
        required: true
        schema:
          $ref: '#/definitions/entity.UserBiometric'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserBiometric'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update biometrics
      tags:
      - nutrition
  /nutrition/biometrics/user/{userID}/history:
    get:
      consumes:
      - application/json
      description: Get biometrics history for a user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.UserBiometric'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get user biometrics history
      tags:
      - nutrition
  /nutrition/biometrics/user/{userID}/latest:
    get:
      consumes:
      - application/json
      description: Get the most recent biometrics for a user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserBiometric'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get latest biometrics
      tags:
      - nutrition
  /nutrition/goals:
    post:
      consumes:
      - application/json
      description: Create new nutrition goals for a user
      parameters:
      - description: Nutrition goals object
        in: body
        name: goals
        required: true
        schema:
          $ref: '#/definitions/entity.UserNutritionGoal'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.UserNutritionGoal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Create nutrition goals
      tags:
      - nutrition
  /nutrition/goals/{id}:
    delete:
      consumes:
      - application/json
      description: Delete nutrition goals by ID
      parameters:
      - description: Nutrition goals ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Delete nutrition goals
      tags:
      - nutrition
    get:
      consumes:
      - application/json
      description: Get nutrition goals by ID
      parameters:
      - description: Nutrition goals ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserNutritionGoal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get nutrition goals
      tags:
      - nutrition
    put:
      consumes:
      - application/json
      description: Update existing nutrition goals
      parameters:
      - description: Nutrition goals ID
        in: path
        name: id
        required: true
        type: string
      - description: Nutrition goals object
        in: body
        name: goals
        required: true
        schema:
          $ref: '#/definitions/entity.UserNutritionGoal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserNutritionGoal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update nutrition goals
      tags:
      - nutrition
  /nutrition/goals/user/{userID}/active:
    get:
      consumes:
      - application/json
      description: Get the active nutrition goals for a user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserNutritionGoal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get active nutrition goals
      tags:
      - nutrition
  /nutrition/goals/user/{userID}/history:
    get:
      consumes:
      - application/json
      description: Get nutrition goals history for a user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.UserNutritionGoal'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get nutrition goals history
      tags:
      - nutrition
  /workout-sessions:
    post:
      consumes:
      - application/json
      description: Create a new workout session for a user
      parameters:
      - description: Workout session object
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/entity.UserWorkoutSession'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.UserWorkoutSession'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Create a new workout session
      tags:
      - workout-sessions
  /workout-sessions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a workout session by its ID
      parameters:
      - description: Workout session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Delete a workout session
      tags:
      - workout-sessions
    get:
      consumes:
      - application/json
      description: Get a workout session by its ID
      parameters:
      - description: Workout session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserWorkoutSession'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get a workout session by ID
      tags:
      - workout-sessions
    put:
      consumes:
      - application/json
      description: Update an existing workout session
      parameters:
      - description: Workout session ID
        in: path
        name: id
        required: true
        type: string
      - description: Workout session object
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/entity.UserWorkoutSession'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserWorkoutSession'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update a workout session
      tags:
      - workout-sessions
  /workout-sessions/{id}/exercises:
    get:
      consumes:
      - application/json
      description: Get all exercises for a workout session
      parameters:
      - description: Workout session ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.UserWorkoutSession'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get workout session exercises
      tags:
      - workout-sessions
    post:
      consumes:
      - application/json
      description: Add a new exercise to a workout session
      parameters:
      - description: Workout session ID
        in: path
        name: id
        required: true
        type: string
      - description: Exercise object
        in: body
        name: exercise
        required: true
        schema:
          $ref: '#/definitions/entity.UserWorkoutSession'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.UserWorkoutSession'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Add exercise to workout session
      tags:
      - workout-sessions
  /workout-sessions/exercises/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an exercise from a workout session
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Delete workout exercise
      tags:
      - workout-sessions
    put:
      consumes:
      - application/json
      description: Update an existing exercise in a workout session
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: string
      - description: Exercise object
        in: body
        name: exercise
        required: true
        schema:
          $ref: '#/definitions/entity.UserWorkoutSession'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserWorkoutSession'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Update workout exercise
      tags:
      - workout-sessions
  /workout-sessions/user/{userID}:
    get:
      consumes:
      - application/json
      description: Get all workout sessions for a specific user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.UserWorkoutSession'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get user workout sessions
      tags:
      - workout-sessions
schemes:
- http
- https
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
