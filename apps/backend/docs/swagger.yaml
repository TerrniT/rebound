basePath: /api
definitions:
  entity.Meal:
    properties:
      created_at:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      nutrition:
        $ref: '#/definitions/entity.Nutrition'
      type:
        $ref: '#/definitions/entity.MealType'
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  entity.MealType:
    enum:
    - breakfast
    - lunch
    - dinner
    - snack
    type: string
    x-enum-varnames:
    - Breakfast
    - Lunch
    - Dinner
    - Snack
  entity.Nutrition:
    properties:
      calories:
        type: number
      carbs:
        type: number
      created_at:
        type: string
      fats:
        type: number
      id:
        type: integer
      proteins:
        type: number
      serving_size:
        type: number
      unit:
        type: string
      updated_at:
        type: string
    type: object
  entity.Token:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Fitness application API for tracking nutrition, meals, and products
  title: Rebound API
  version: "1.0"
paths:
  /auth/token:
    post:
      consumes:
      - application/json
      description: Create a new authentication token for a user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Token'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new token
      tags:
      - auth
  /auth/token/{token}:
    delete:
      consumes:
      - application/json
      description: Revoke a specific token
      parameters:
      - description: Token string
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Revoke token
      tags:
      - auth
  /auth/validate/{token}:
    get:
      consumes:
      - application/json
      description: Validate a token and get the associated user
      parameters:
      - description: Token string
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Validate token
      tags:
      - auth
  /meals:
    get:
      consumes:
      - application/json
      description: Get a list of meals with pagination
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      - description: Start date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Meal'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List meals
      tags:
      - meals
    post:
      consumes:
      - application/json
      description: Create a new meal with the provided information
      parameters:
      - description: Meal object
        in: body
        name: meal
        required: true
        schema:
          $ref: '#/definitions/entity.Meal'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Meal'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new meal
      tags:
      - meals
  /meals/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a meal by its ID
      parameters:
      - description: Meal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete meal
      tags:
      - meals
    get:
      consumes:
      - application/json
      description: Get meal information by its ID
      parameters:
      - description: Meal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Meal'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get meal by ID
      tags:
      - meals
    put:
      consumes:
      - application/json
      description: Update meal information by its ID
      parameters:
      - description: Meal ID
        in: path
        name: id
        required: true
        type: integer
      - description: Meal object
        in: body
        name: meal
        required: true
        schema:
          $ref: '#/definitions/entity.Meal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Meal'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update meal
      tags:
      - meals
  /meals/date/{date}:
    get:
      consumes:
      - application/json
      description: Get all meals for a specific date
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      - description: Date (YYYY-MM-DD)
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Meal'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get meals by date
      tags:
      - meals
  /nutrition:
    get:
      consumes:
      - application/json
      description: Get a list of nutrition entries with pagination
      parameters:
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Nutrition'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List nutrition entries
      tags:
      - nutrition
    post:
      consumes:
      - application/json
      description: Create a new nutrition entry with the provided information
      parameters:
      - description: Nutrition object
        in: body
        name: nutrition
        required: true
        schema:
          $ref: '#/definitions/entity.Nutrition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Nutrition'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new nutrition entry
      tags:
      - nutrition
  /nutrition/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a nutrition entry by its ID
      parameters:
      - description: Nutrition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete nutrition entry
      tags:
      - nutrition
    get:
      consumes:
      - application/json
      description: Get nutrition information by its ID
      parameters:
      - description: Nutrition ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Nutrition'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get nutrition entry by ID
      tags:
      - nutrition
    put:
      consumes:
      - application/json
      description: Update nutrition information by its ID
      parameters:
      - description: Nutrition ID
        in: path
        name: id
        required: true
        type: integer
      - description: Nutrition object
        in: body
        name: nutrition
        required: true
        schema:
          $ref: '#/definitions/entity.Nutrition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Nutrition'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update nutrition entry
      tags:
      - nutrition
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user
      tags:
      - users
  /users/email/{email}:
    get:
      consumes:
      - application/json
      description: Get user information by their email address
      parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by email
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
