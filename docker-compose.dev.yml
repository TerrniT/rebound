version: "3.9"

x-backend-app-environment: &x-backend-app-environment
  GOMAXPROCS: "1"
  # App
  APP_NAME: "go-clean-template"
  APP_VERSION: "1.0.0"
  # HTTP settings
  HTTP_PORT: "8080"
  HTTP_USE_PREFORK_MODE: "false"
  # Logger
  LOG_LEVEL: "debug"
  # PG
  PG_POOL_MAX: "2"
  PG_URL: "postgres://user:myAwEsOm3pa55@w0rd@db:5432/db"
  # Metrics
  METRICS_ENABLED: "true"
  # Swagger
  SWAGGER_ENABLED: "true"

x-db-environment: &x-db-environment
  POSTGRES_SSL_MODE: "disable"
  POSTGRES_HOST: "db"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "db"
  POSTGRES_PASSWORD: "myAwEsOm3pa55@w0rd"
  POSTGRES_USER: "user" 


services:
  db:
    container_name: db
    image: postgres:17-alpine
    environment:
      <<: *x-db-environment
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      app_network:
        aliases:
          - db.lvh.me
  caddy:
    container_name: caddy
    image: caddy:alpine
    depends_on:
      # - frontend
      - backend 
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - 'caddy-data:/data/caddy'
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    restart: always

  # frontend:
  #   build: 
  #     context: ./frontend
  #   expose:
  #     - '3333'
  #   volumes:
  #     - ./frontend:/web
  #   restart: always

  backend:
    container_name: backend
    platform: linux/amd64
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      <<: *x-backend-app-environment
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      app_network:
        aliases:
          - app.lvh.me
    restart: unless-stopped

  # redis:
  #   image: redis:alpine
  #   expose:
  #     - '6379'
  #   logging:
  #     driver: none
  #   restart: no

volumes:
  db_data:
  caddy-data:
    driver: local

networks:
  app_network:
    external: false